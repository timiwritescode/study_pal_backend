openapi: 3.0.0
info:
  title: Study Pal API
  description: API documentation for study pal, a personalized study platform for college students
  version: 1.0.0
  contact:
    name: Odebode Zion Oluwatimilehin
    email: odebodezion@gmail.com

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Your registration is successful
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          user_id:
                            type: string
                            format: uuid
                            example: 123e4567-e89b-12d3-a456-426614174000
                          first_name:
                            type: string
                            example: Albert
                          last_name:
                            type: string
                            example: Einstein
                          email:
                            type: string
                            example: albert.einstein@example.com
                          role:
                            type: string
                            example: student
                          institution:
                            type: string
                            example: Harvard University
        '400':
          description: Registration Unsuccessful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Bad Request
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Registration unsuccessful
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Server error
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Cannot process your request currently

  /auth/login:
    post:
      summary: Log in a user
      description: Log in with an email and password.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Login Successful
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                      message:
                        type: string
                        example: Login successsful
        '401':
          description: Login Unsuccessful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Authentication failed
                  status_code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Bad Request
                    
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Server error
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Cannot process your request currently
                    
  /auth/verify-user/{user_id}:
    post:
      summary: Verify a new user with verification link
      tags:
        - Authentication
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: Id of user

      responses:
        '200':
          description: User verified successfully
          content:
            application/json:
              schema:
                type: object
                properties: 
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Verification successful
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid verification link or link has expired

        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Server error

  /profile/user/{user_id}:
    get:
      summary: Get User details
      tags:
        - Profile Management
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: string
            description: ID of the client
      responses:
        '200':
          description: Request complete
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Request Successful
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          user_id:
                            type: string
                            format: uuid
                            example: 123e4567-e89b-12d3-a456-426614174000
                          first_name:
                            type: string
                            example: albert
                          last_name:
                            type: string
                            example: einstein
                          email:
                            type: string
                            example: albert.einstein@example.com
                          institution:
                            type: string
                            example: Harvard University
                          nationality:
                            type: string
                            example: United states of America
                          profile_picture:
                            type: string
                            example: http://dp_image.com/dp_image.png
                          course_of_study:
                            type: string
                            example: string
                          role:
                            type: string
                            example: user

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Bad request

        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  status_code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: An error occured! We are working on integer
  
    patch:
      summary: Edit user details
      tags: 
        - Profile Management
      parameters:
        - name: user_id
          in: path
          required: true 
          schema:
            type: string
            format: string
            description: ID of the client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProfile'
      responses:
        '200':
          description: Request successfuly completed

components:
  schemas:
    RegisterUser:
      type: object
      required:
        - first_name
        - last_name
        - gender
        - phone
        - age
        - location
        - email
        - password
      properties:
        first_name:
          type: string
          example: Albert 
        last_name:
          type: string
          example: Einstein
        gender:
          type: string
          example: Male
        phone:
          type: string
          example: +234098765432
        age:
          type: integer
          example: 19
        email:
          type: string
          format: email
          example: albert.einsten@example.com
        password:
          type: string
          format: password
          example: somepassword
        role:
          type: string
          enum: [user, admin]
          example: user

    LoginUser:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          format: password
          example: string

    EditProfile:
      type: object
      properties:
        first_name:
          type: string
          example: Albert
        last_name:
            type: string
            example: Einstein
        institution:
            type: string
            example: string
        avatar:
          type: string
          format: binary
        course_of_study:
          type: string
          example: MIT
  
        
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ODEBODEZION/Studypal/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://app.swaggerhub.com/apis/ODEBODEZION/Studypal/1.0.0